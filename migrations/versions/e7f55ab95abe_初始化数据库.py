"""初始化数据库

Revision ID: e7f55ab95abe
Revises: 
Create Date: 2025-06-26 13:13:46.256086

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e7f55ab95abe'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('stores',
    sa.Column('store_id', sa.String(length=32), nullable=False, comment='店铺唯一标识符'),
    sa.Column('store_name', sa.String(length=100), nullable=False, comment='店铺名称'),
    sa.Column('store_address', sa.String(length=255), nullable=True, comment='店铺地图地址链接'),
    sa.Column('third_party_platform', sa.Boolean(), nullable=True, comment='是否开启第三方外卖平台'),
    sa.PrimaryKeyConstraint('store_id')
    )
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False, comment='用户主键，自增 ID'),
    sa.Column('username', sa.String(length=64), nullable=False, comment='登录用户名'),
    sa.Column('password_hash', sa.String(length=255), nullable=False, comment='登录密码哈希'),
    sa.Column('user_status', sa.Integer(), nullable=False, comment='用户状态（1=活跃，0=禁用）'),
    sa.Column('last_login_time', sa.DateTime(), nullable=True, comment='最近一次登录时间'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.Column('role', sa.Enum('ADMIN', 'HEAD_MANAGER', 'FINANCE', 'BRANCH_MANAGER', 'EMPLOYEE', name='roletype'), nullable=True, comment='用户角色'),
    sa.Column('store_id', sa.String(length=32), nullable=True, comment='关联店铺ID (门店组用户专属)'),
    sa.Column('real_name', sa.String(length=100), nullable=True, comment='真实姓名'),
    sa.Column('id_card_number', sa.String(length=100), nullable=True, comment='身份证号'),
    sa.Column('bank_name', sa.String(length=100), nullable=True, comment='银行名称'),
    sa.Column('bank_account_number', sa.String(length=100), nullable=True, comment='银行账号'),
    sa.Column('is_primary_contact', sa.Boolean(), nullable=True, comment='是否为店铺主要联系人'),
    sa.Column('phone', sa.String(length=50), nullable=True, comment='联系电话'),
    sa.Column('line_id', sa.String(length=100), nullable=True, comment='LINE ID'),
    sa.Column('email', sa.String(length=100), nullable=True, comment='电子邮箱'),
    sa.Column('start_date', sa.Date(), nullable=True, comment='入职日期'),
    sa.Column('end_date', sa.Date(), nullable=True, comment='离职日期'),
    sa.Column('profile_completed', sa.Boolean(), nullable=True, comment='员工档案是否已完善（仅能一次性填写）'),
    sa.ForeignKeyConstraint(['store_id'], ['stores.store_id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('daily_sales',
    sa.Column('report_id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.String(length=32), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('report_date', sa.Date(), nullable=False),
    sa.Column('total_income', sa.Float(), nullable=True, comment='POS机小票总收入(T)'),
    sa.Column('cash_income', sa.Float(), nullable=True, comment='现金收入(C)'),
    sa.Column('pos_income', sa.Float(), nullable=True, comment='电子支付收入(P)'),
    sa.Column('day_pass_income', sa.Float(), nullable=True, comment='POS系统中记录的外卖收入(D)'),
    sa.Column('meituan_takeaway', sa.Float(), nullable=True, comment='第三方外卖收入(美团)'),
    sa.Column('eleme_takeaway', sa.Float(), nullable=True, comment='第三方外卖收入(饿了么)'),
    sa.Column('bank_receipt_amount', sa.Float(), nullable=True, comment='银行存入的现金金额'),
    sa.Column('pos_info_completed', sa.Boolean(), nullable=False, comment='第一步(POS)是否完成'),
    sa.Column('takeaway_info_completed', sa.Boolean(), nullable=False, comment='第二步(外卖)是否完成'),
    sa.Column('bank_info_completed', sa.Boolean(), nullable=False, comment='第三步(银行)是否完成'),
    sa.Column('is_submitted', sa.Boolean(), nullable=False, comment='是否已最终提交给财务'),
    sa.Column('financial_check_status', sa.Enum('PENDING', 'BANK_RECEIVED', 'TAKEEAWAY_RECEIVED', 'AMOUNT_VERIFIED', 'REQUIRES_REMEDIATION', 'CHECKED', name='financialcheckstatus'), nullable=False, comment='财务核对状态'),
    sa.Column('archived', sa.Boolean(), nullable=False, comment='是否已归档'),
    sa.Column('bank_deposit', sa.Float(), nullable=True, comment='财务填写的实际到账金额'),
    sa.Column('voucher_amount', sa.Float(), nullable=True, comment='财务填写的代金券金额'),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['store_id'], ['stores.store_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('report_id')
    )
    with op.batch_alter_table('daily_sales', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_daily_sales_report_date'), ['report_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_daily_sales_store_id'), ['store_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_daily_sales_user_id'), ['user_id'], unique=False)

    op.create_table('daily_sales_attachments',
    sa.Column('attachment_id', sa.Integer(), autoincrement=True, nullable=False, comment='凭证ID'),
    sa.Column('report_id', sa.Integer(), nullable=False, comment='日报ID'),
    sa.Column('file_path', sa.String(length=255), nullable=True, comment='文件路径'),
    sa.Column('attachment_type', sa.Enum('sales_slip', 'bank_receipt', 'takeaway_screenshot', 'image', 'pdf', name='attachmenttype'), nullable=False, comment='附件类型'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.ForeignKeyConstraint(['report_id'], ['daily_sales.report_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('attachment_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('daily_sales_attachments')
    with op.batch_alter_table('daily_sales', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_daily_sales_user_id'))
        batch_op.drop_index(batch_op.f('ix_daily_sales_store_id'))
        batch_op.drop_index(batch_op.f('ix_daily_sales_report_date'))

    op.drop_table('daily_sales')
    op.drop_table('users')
    op.drop_table('stores')
    # ### end Alembic commands ###
